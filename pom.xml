<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>java-wzorce-gdy5</artifactId>
    <version>1.0-SNAPSHOT</version>

<!--    Implementujemy-->
<!--    Builder - zaimplementowany jako pizzaBuilder-->
<!--    Singleton - zaimplementowany w formie KrÃ³la-->
<!--    Abstract Factory - zaimplementowane w formie fabryki drzwi-->
<!--    Zadanie domowe-->
<!--    Factory Method - zaimplementowane w formie menu burgerow-->
<!--    Prototype - klonowanie pizzy eg. Pizza drugaPizza = mojaPizza.clone();-->

<!--    Implementujemy Strukturalne-->
<!--    Decorator - zaimplementujemy robiac kawe-->
<!--        Zadanie domowe-->
<!--    Adapter - zaimplementujecie w domu na podstawie karty sd i przejsciowki usb-->

<!--    Zajecia drugie-->
<!--    Strukturalne-->
<!--    Bridge - style dla stron-->
<!--    Behavioralne-->
<!--    Observer - przyklad szukania pracy-->
<!--    Command - wlaczania zarowki (dodatkowe zadanie - kelner)-->
<!--    Chain of resposnsibility - przyklad wydawania pieniedzy z portfela-->

<!--    Do domu-->
<!--    Facade - przyklad uruchamianie komputera-->
<!--            Facada posiada jeden przyckis startPC-->
<!--            Pod spodem - uruchamiany jest zasilacz-->
<!--                        -uruchamiany jest ekran-->
<!--                        -uruchamiana jest klawiatura-->
<!--            Computer facada = new Computer();-->
<!--            Computer-->
<!--                -pole z zasilaczem-->
<!--                -pole z ekranem-->
<!--                -pole z klawiatura-->
<!--                -metoda ktora wszystko uruchamia-->
<!--            facada.startPC(); wypisze do logga-->
<!--            "powerSupply is on"-->
<!--            "monitor is on"-->
<!--            "keyboard is on"-->
<!--    Command - w postaci kelnera;-->
<!--            Restauracja - -->
<!--            Mamy zamowienie-->
<!--            Mamy kelnera-->
<!--            Mamy kucharza-->
<!--            Otwieramy restauracje-->
<!--            Tworzymy zamowienie-->
<!--                Kelner otrzymuje zamowienie-->
<!--                Kelner ma metody-->
<!--                przyjmijZamowienie(Zamowienie)-->
<!--                wydajZamowienie-->
<!--                przyjmij napiwek-->
<!--                zaniesDoKucharza-->
<!--            Kucharz otrzymuje-->
<!--                Kucharz new Kucharz(Zamowienie)-->
<!--                kucharz gotouje-->
<!--                kucharz smakuje-->
<!--        Memento w formie kalkulatora-->
<!--                Mozliwosc zapisania ostatniego obliczniea-->
<!--                M- - odejmuje zapisane wartosci-->
<!--                M+ - dodaje zapisane wartosci-->



    <properties>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
    </properties>
<!--Zaleznosc do unit testow junit-->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>